/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_DS18B20_H
#define _MOCK_DS18B20_H

#include "ds18b20.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#pragma GCC diagnostic push
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_ds18b20_Init(void);
void mock_ds18b20_Destroy(void);
void mock_ds18b20_Verify(void);




#define ds18b20_initialise_IgnoreAndReturn(cmock_retval) ds18b20_initialise_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ds18b20_initialise_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
#define ds18b20_initialise_ExpectAnyArgsAndReturn(cmock_retval) ds18b20_initialise_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ds18b20_initialise_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
#define ds18b20_initialise_ExpectAndReturn(resolution, cmock_retval) ds18b20_initialise_CMockExpectAndReturn(__LINE__, resolution, cmock_retval)
void ds18b20_initialise_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, Resolution resolution, _Bool cmock_to_return);
#define ds18b20_initialise_IgnoreArg_resolution() ds18b20_initialise_CMockIgnoreArg_resolution(__LINE__)
void ds18b20_initialise_CMockIgnoreArg_resolution(UNITY_LINE_TYPE cmock_line);
#define ds18b20_read_rom_IgnoreAndReturn(cmock_retval) ds18b20_read_rom_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ds18b20_read_rom_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, ds18b20_ROM_t cmock_to_return);
#define ds18b20_read_rom_ExpectAnyArgsAndReturn(cmock_retval) ds18b20_read_rom_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ds18b20_read_rom_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, ds18b20_ROM_t cmock_to_return);
#define ds18b20_read_rom_ExpectAndReturn(cmock_retval) ds18b20_read_rom_CMockExpectAndReturn(__LINE__, cmock_retval)
void ds18b20_read_rom_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ds18b20_ROM_t cmock_to_return);
#define ds18b20_do_conversion_Ignore() ds18b20_do_conversion_CMockIgnore()
void ds18b20_do_conversion_CMockIgnore(void);
#define ds18b20_do_conversion_ExpectAnyArgs() ds18b20_do_conversion_CMockExpectAnyArgs(__LINE__)
void ds18b20_do_conversion_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define ds18b20_do_conversion_Expect() ds18b20_do_conversion_CMockExpect(__LINE__)
void ds18b20_do_conversion_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define ds18b20_read_scratchpad_IgnoreAndReturn(cmock_retval) ds18b20_read_scratchpad_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ds18b20_read_scratchpad_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
#define ds18b20_read_scratchpad_ExpectAnyArgsAndReturn(cmock_retval) ds18b20_read_scratchpad_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ds18b20_read_scratchpad_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
#define ds18b20_read_scratchpad_ExpectAndReturn(data, cmock_retval) ds18b20_read_scratchpad_CMockExpectAndReturn(__LINE__, data, cmock_retval)
void ds18b20_read_scratchpad_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ds18b20_scratchpad_data_t* const data, _Bool cmock_to_return);
#define ds18b20_read_scratchpad_ReturnThruPtr_data(data) ds18b20_read_scratchpad_CMockReturnMemThruPtr_data(__LINE__, data, sizeof(*data))
#define ds18b20_read_scratchpad_ReturnArrayThruPtr_data(data, cmock_len) ds18b20_read_scratchpad_CMockReturnMemThruPtr_data(__LINE__, data, (int)(cmock_len * (int)sizeof(*data)))
#define ds18b20_read_scratchpad_ReturnMemThruPtr_data(data, cmock_size) ds18b20_read_scratchpad_CMockReturnMemThruPtr_data(__LINE__, data, cmock_size)
void ds18b20_read_scratchpad_CMockReturnMemThruPtr_data(UNITY_LINE_TYPE cmock_line, ds18b20_scratchpad_data_t* data, int cmock_size);
#define ds18b20_read_scratchpad_IgnoreArg_data() ds18b20_read_scratchpad_CMockIgnoreArg_data(__LINE__)
void ds18b20_read_scratchpad_CMockIgnoreArg_data(UNITY_LINE_TYPE cmock_line);
#define ds18b20_convert_IgnoreAndReturn(cmock_retval) ds18b20_convert_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ds18b20_convert_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, float cmock_to_return);
#define ds18b20_convert_ExpectAnyArgsAndReturn(cmock_retval) ds18b20_convert_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ds18b20_convert_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, float cmock_to_return);
#define ds18b20_convert_ExpectAndReturn(digital, cmock_retval) ds18b20_convert_CMockExpectAndReturn(__LINE__, digital, cmock_retval)
void ds18b20_convert_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t digital, float cmock_to_return);
#define ds18b20_convert_IgnoreArg_digital() ds18b20_convert_CMockIgnoreArg_digital(__LINE__)
void ds18b20_convert_CMockIgnoreArg_digital(UNITY_LINE_TYPE cmock_line);
#define ds18b20_calculate_CRC_IgnoreAndReturn(cmock_retval) ds18b20_calculate_CRC_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ds18b20_calculate_CRC_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define ds18b20_calculate_CRC_ExpectAnyArgsAndReturn(cmock_retval) ds18b20_calculate_CRC_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ds18b20_calculate_CRC_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define ds18b20_calculate_CRC_ExpectAndReturn(data, num_of_bytes, cmock_retval) ds18b20_calculate_CRC_CMockExpectAndReturn(__LINE__, data, num_of_bytes, cmock_retval)
void ds18b20_calculate_CRC_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const uint8_t* data, uint32_t num_of_bytes, uint8_t cmock_to_return);
#define ds18b20_calculate_CRC_IgnoreArg_data() ds18b20_calculate_CRC_CMockIgnoreArg_data(__LINE__)
void ds18b20_calculate_CRC_CMockIgnoreArg_data(UNITY_LINE_TYPE cmock_line);
#define ds18b20_calculate_CRC_IgnoreArg_num_of_bytes() ds18b20_calculate_CRC_CMockIgnoreArg_num_of_bytes(__LINE__)
void ds18b20_calculate_CRC_CMockIgnoreArg_num_of_bytes(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#pragma GCC diagnostic pop
#endif

#endif
