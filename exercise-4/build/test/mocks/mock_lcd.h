/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_LCD_H
#define _MOCK_LCD_H

#include "lcd.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#pragma GCC diagnostic push
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_lcd_Init(void);
void mock_lcd_Destroy(void);
void mock_lcd_Verify(void);




#define lcd_initialize_IgnoreAndReturn(cmock_retval) lcd_initialize_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void lcd_initialize_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
#define lcd_initialize_ExpectAnyArgsAndReturn(cmock_retval) lcd_initialize_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void lcd_initialize_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
#define lcd_initialize_ExpectAndReturn(cmock_retval) lcd_initialize_CMockExpectAndReturn(__LINE__, cmock_retval)
void lcd_initialize_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, _Bool cmock_to_return);
#define lcd_display_IgnoreAndReturn(cmock_retval) lcd_display_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void lcd_display_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define lcd_display_ExpectAnyArgsAndReturn(cmock_retval) lcd_display_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void lcd_display_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define lcd_display_ExpectAndReturn(str, cmock_retval) lcd_display_CMockExpectAndReturn(__LINE__, str, cmock_retval)
void lcd_display_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* str, int cmock_to_return);
#define lcd_display_IgnoreArg_str() lcd_display_CMockIgnoreArg_str(__LINE__)
void lcd_display_CMockIgnoreArg_str(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#pragma GCC diagnostic pop
#endif

#endif
